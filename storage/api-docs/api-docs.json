{
    "openapi": "3.0.0",
    "info": {
        "title": "TrackIt",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user with the provided credentials",
                "operationId": "3ab1ff58e6d30faee19a7b6405b8a694",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Authenticates a user and returns a JWT token if credentials are valid.",
                "operationId": "72da9856cfaf0c9d012815b263d9f6eb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "JWT token",
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Q..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a list of tasks with optional filters.",
                "operationId": "946a9af2cc201f8174ae75a0cbf219ff",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Query parameters for filtering the tasks.",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/ListTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of tasks.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "tasks fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TaskResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "e6fce3e647d6ab1539147a7e28cd972c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/{id}": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task",
                "operationId": "ffe79d69e3d77ff825c4e90d6f9da1c4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/{task}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a single task by ID",
                "operationId": "033c7191df1de76119b95bbf0c5dbaf1",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task showed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task showed successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaskResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task",
                "description": "Deletes a task and its associated dependencies if applicable.",
                "operationId": "a77542816df830a84e520e8295bcabc0",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully"
                    },
                    "404": {
                        "description": "Task not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/{task}/change-status": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Change the status of a task",
                "description": "Updates the status of a task to one of the allowed values",
                "operationId": "changeStatus",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The status data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task status updated successfully"
                                        },
                                        "data": {
                                            "description": "Updated task data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid status provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/my-tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Retrieve tasks assigned to the authenticated user",
                "operationId": "71e0f3c7c41fd704862742ac7845285d",
                "responses": {
                    "200": {
                        "description": "List of tasks assigned to the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "My Tasks"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TaskResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/{task}/assign": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Assign a task to a user",
                "operationId": "c2588220f866baceab887c5a097ceb5c",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "The ID of the task to assign",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task successfully assigned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task assigned successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AssignTaskRequest": {
                "title": "Assign Task Request",
                "description": "Payload to assign a task to a user",
                "required": [
                    "assignee_id"
                ],
                "properties": {
                    "assignee_id": {
                        "description": "The ID of the user to assign the task to",
                        "type": "integer",
                        "example": 3
                    }
                },
                "type": "object"
            },
            "ChangeStatusRequest": {
                "title": "Change Status Request",
                "description": "Data required to change the status of an existing task",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "canceled"
                        ],
                        "example": "completed"
                    }
                },
                "type": "object"
            },
            "CreateTaskRequest": {
                "title": "Create Task Request",
                "description": "Data required to create a new task",
                "required": [
                    "title",
                    "status"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Create API documentation"
                    },
                    "description": {
                        "type": "string",
                        "example": "Write Swagger docs for task creation"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "canceled"
                        ],
                        "example": "pending"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-05-20"
                    },
                    "assignee_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "dependency_task_ids": {
                        "description": "Array of task IDs this task depends on",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                },
                "type": "object"
            },
            "ListTaskRequest": {
                "title": "List Task Request",
                "description": "Request parameters to list tasks with search and limit",
                "properties": {
                    "limit": {
                        "description": "Number of tasks per page (1-100)",
                        "type": "integer",
                        "example": 10
                    },
                    "search": {
                        "description": "Search filter for tasks, supports various field filters.",
                        "type": "string",
                        "example": "assignee.name:khaled;status:pending;due_date:2025-05-25,2025-06-01"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Login Request",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "description": "User's password",
                        "type": "string",
                        "minLength": 6,
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "RegisterUserRequestSchema": {
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "hello@gmail.com",
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "example": "123456"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "123456"
                    },
                    "name": {
                        "type": "string",
                        "example": "test"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+201000000000"
                    }
                },
                "type": "object"
            },
            "UpdateTaskRequest": {
                "title": "Update Task Request",
                "description": "Data allowed for updating a task",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Updated task title"
                    },
                    "description": {
                        "type": "string",
                        "example": "Updated task description"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "canceled"
                        ],
                        "example": "completed"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-06-01"
                    },
                    "assignee_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "dependency_task_id": {
                        "type": "integer",
                        "example": 5
                    }
                },
                "type": "object"
            },
            "TaskResource": {
                "required": [
                    "id",
                    "title",
                    "status",
                    "due_date",
                    "assignee_id"
                ],
                "properties": {
                    "id": {
                        "description": "Task ID",
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "description": "Task title",
                        "type": "string",
                        "example": "Finish project"
                    },
                    "description": {
                        "description": "Task description",
                        "type": "string",
                        "example": "Complete the task management project"
                    },
                    "status": {
                        "description": "Task status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "canceled"
                        ],
                        "example": "pending"
                    },
                    "due_date": {
                        "description": "Task due date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31"
                    },
                    "assignee_id": {
                        "description": "ID of the user assigned to the task",
                        "type": "integer",
                        "example": 1
                    },
                    "dependency_task_id": {
                        "description": "ID of the dependent task",
                        "type": "integer",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 8
                    },
                    "name": {
                        "type": "string",
                        "example": "test"
                    },
                    "email": {
                        "type": "string",
                        "example": "he@gmail.com"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+201005594752"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-09T10:52:17.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-09T10:52:17.000000Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Tasks",
            "description": "Tasks"
        }
    ]
}